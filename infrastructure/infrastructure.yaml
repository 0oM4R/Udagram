Parameters:
  Environment:
    Description: The name of the environment that will be prefixed to resources name
    Type: String

  VpcCIDR: 
    Description: IP range [CIDR notation] for VPC
    Type: String
    Default: 10.0.0.0/16

  CIDRPublicSubnet1: 
    Description: IP range [CIDR notation] for the first public subnet
    Type: String
    Default: 10.0.0.0/24

  CIDRPublicSubnet2: 
    Description: IP range [CIDR notation] for the second public subnet
    Type: String
    Default: 10.0.1.0/24
  
  CIDRPrivateSubnet1: 
    Description: IP range [CIDR notation] for the first private subnet
    Type: String
    Default: 10.0.2.0/24

  CIDRPrivateSubnet2: 
    Description: IP range [CIDR notation] for the second private subnet
    Type: String
    Default: 10.0.3.0/24

Resources: 

  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags: 
        - Key: name
          Value: !Ref Environment

  InternetGateway: 
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: name
          Value: !Ref Environment
  
  InternetGateWayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref VPC   
  
  # to assign a public id for the instance on launch 
  PublicSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
        VpcId: !Ref VPC
        AvailabilityZone: !Select [ 0, !GetAZs '' ]
        CidrBlock: !Ref CIDRPublicSubnet1
        MapPublicIpOnLaunch: true
        Tags: 
            - Key: Name 
              Value: !Sub ${Environment} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '']
      CidrBlock: !Ref CIDRPublicSubnet2
      MapPublicIpOnLaunch: true
      # to assign a public id for the instance on launch 
      Tags:
        - Key: name
          Value: !Sub ${Environment} Public subnet (Az2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !Ref CIDRPrivateSubnet1
      # MapPublicIdOnLaunch is false by default
      Tags:
        - Key: name
          Value: !Sub ${Environment} Private subnet (Az1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '']
      CidrBlock: !Ref CIDRPrivateSubnet2
      # MapPublicIdOnLaunch is false by default
      Tags:
        - Key: name
          Value: !Sub ${Environment} Private subnet (Az2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn:  InternetGateWayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn:  InternetGateWayAttachment
    Properties:
      Domain: vpc

  NatGateway1: 
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2: 
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  # public route table
  PubRouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: name
          Value: !Sub ${Environment} Public routing table

  DefaultPublicRoutes:
    Type: AWS::EC2::Route
    DependsOn:  InternetGateWayAttachment
    Properties:
      RouteTableId: !Ref PubRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  #Associate subnets to the routing table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PubRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PubRouteTable
      SubnetId: !Ref PublicSubnet2

  #private route table for the first Subnet
  PrivRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: name
          Value: !Sub ${Environment} private route table
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    #why its independent
    Properties:
      RouteTableId: !Ref PrivRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  #Associate private subnet to the route RoutTableId
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivRouteTable1
      SubnetId: !Ref PrivateSubnet1

  #private route table for the first subnet 
  PrivRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: name
          Value: !Sub ${Environment} private route table
  DefaultPrivateTable3:
    Type: AWS::EC2::Route
    Properties: 
      RouteTableId: !Ref PrivRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivRouteTable2
      SubnetId: !Ref PrivateSubnet2
      
Outputs:
  VPC:
    Description: to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${Environment}-VPCId
  
  PublicRouteTable:
    Description: public route table 
    Value: !Ref PubRouteTable
    Export: 
      Name: !Sub ${Environment}-Pub-RT
  
  PrivateRouteTable1:
    Description: private route table 1
    Value: !Ref PrivRouteTable1
    Export: 
      Name: !Sub ${Environment}-Priv-RT1

  PrivateRouteTable2:
    Description: private route table 2
    Value: !Ref PrivRouteTable2
    Export: 
      Name: !Sub ${Environment}-Priv-RT2

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Environment}-PUB1-SN

  PublicSubnet2: 
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Environment}-PUB2-SN

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Environment}-PRI1-SN

  PrivateSubnet2: 
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Environment}-PRI2-SN 
